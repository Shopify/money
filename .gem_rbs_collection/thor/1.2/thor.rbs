class Thor
  class Group
  end

  module Actions
    class CreateFile
    end

    def create_file: (String destination, String data, ?verbose: bool) -> String
                   | (String destination, ?verbose: bool) { () -> String } -> String
  end

  class Error
  end

  module Base
    attr_accessor options: Hash[String | Symbol, untyped]
  end

  include Base

  def self.desc: (
      String usage,
      String description,
      ?options: Hash[Symbol, untyped]
    ) -> void

  def self.method_option: (
      Symbol | String name,
      ?aliases: String | Symbol | Array[String | Symbol],
      ?banner: String,
      ?default: untyped,
      ?lazy_default: untyped,
      ?desc: String,
      ?required: bool,
      ?type: :string | :hash | :array | :numeric | :boolean,
      ?enum: untyped,
      ?repeatable: bool,
      **untyped
    ) -> void
  alias self.option self.method_option

  def self.no_commands: () { () -> void } -> void
end
